knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages('lubridate')
knitr::opts_chunk$set(echo = TRUE)
# Load data
md_grant_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv")
# Display it
md_grant_loans
View(md_grant_loans)
View(md_grant_loans)
# Now let's try and group and count the number of expenditures by recipient. To make it a bit more manageable, let's use another string function from `stringr` and filter for recipients that start with the uppercase "W" or lowercase "w" using the function `str_detect()` with a regular expression.
# The filter function in the codeblock below says: look in the Grantee column, and pluck out any value that starts with (the "^" symbol means "starts with") a lowercase "w" OR (the vertical "|", called a pipe, means OR) an uppercase "W".
md_grant_loans |>
group_by(Grantee) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
# turn off sci notation
options(scipen=999)
library(tidyverse)
library(lubridate)
library(refinr)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
cleaned_md_grant_loans
cleaned_md_grant_loans |>
group_by(Grantee, grantee_clean) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=n_gram_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
cleaned_md_grant_loans
cleaned_md_grant_loans |>
group_by(Grantee, grantee_clean) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
# Now let's try and group and count the number of expenditures by recipient. To make it a bit more manageable, let's use another string function from `stringr` and filter for recipients that start with the uppercase "W" or lowercase "w" using the function `str_detect()` with a regular expression.
# The filter function in the codeblock below says: look in the Grantee column, and pluck out any value that starts with (the "^" symbol means "starts with") a lowercase "w" OR (the vertical "|", called a pipe, means OR) an uppercase "W".
md_grant_loans |>
group_by(Grantee) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
cleaned_md_grant_loans
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
arrange(grantee_clean)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
arrange(grantee)
cleaned_md_grant_loans <- md_grant_loans |>
mutate(grantee_clean=key_collision_merge(Grantee)) |>
select(Grantee, grantee_clean, everything())
cleaned_md_grant_loans
cleaned_md_grant_loans |>
group_by(Grantee, grantee_clean) |>
summarise(
count=n()
) |>
filter(str_detect(Grantee, '^w|^W')) |>
arrange(Grantee)
setwd("~/Google Drive/My Drive/JOUR472")
read.csv(fatal-police-shootings-data.csv)
read.csv("fatal-police-shootings-data.csv")
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings %>%
group_by(gender)
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings %>%
group_by(gender)
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings |>
group_by(gender)
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings %>%
group_by(gender)
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings %>%
group_by(gender) %>%
summarize(count = n()) |>
arrange(desc(count))
read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings <- read.csv("fatal-police-shootings-data.csv")
fatal_police_shootings %>%
group_by(gender) %>%
summarize(count = n()) %>%
arrange(desc(count))
read.csv("fatal-police-shootings-data.csv")
setwd("~/Google Drive/My Drive/JOUR472/data_journalism_2023_fall/reverse engineering/Reverse-Engineering-Project")
read.csv("fatal-police-shootings-data.csv")
library(tidyverse)
library(lubridate)
library(janitor)
read.csv("fatal-police-shootings-data.csv")
read_csv("fatal-police-shootings-data.csv")
